local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=1;local F;C=q(p(C,5),h("\23\251","\32\57\213\90\118\148\96"),function(G)if n(G,2)==246-167 then F=m(p(G,2-1,1-0))return""else local H=0;local I;while true do if H==0 then I=o(m(G,41-25))if F then local J=r(I,F)F=nil;return J else return I end;break end end end end)local function K(L,M,N)if N then local O=L/2^(M-(620-(555+64)))%(933-(857+74))^(N-1-(M-1)+1)return O-O%1 else local P=0;local Q;while true do if 0==P then Q=2^(M-1)return L%(Q+Q)>=Q and 1 or 0 end end end end;local function R()local S=n(C,E,E)E=E+1;return S end;local function T()local U=0;local V;local W;while true do if 0==U then V,W=n(C,E,E+570-(367+201))E=E+929-(214+713)U=1 end;if U==1 then return W*256+V end end end;local function X()local Y,Z,_,a0=n(C,E,E+3)E=E+4;return a0*16777216+_*65536+Z*(65+191)+Y end;local function a1()local a2=X()local a3=X()local a4=1;local a5=K(a3,1,20)*2^32+a2;local a6=K(a3,21,31)local a7=K(a3,32)==1 and-(1+0)or 1;if a6==0 then if a5==0 then return a7*(877-(282+595))else a6=1;a4=0 end elseif a6==2047 then return a5==0 and a7*1/0 or a7*NaN end;return u(a7,a6-1023)*(a4+a5/2^52)end;local function a8(a9)local aa;if not a9 then local ab=0;while true do if ab==0 then a9=X()if a9==0 then return""end;break end end end;aa=p(C,E,E+a9-1)E=E+a9;local ac={}for ad=1,#aa do ac[ad]=o(n(p(aa,ad,ad)))end;return s(ac)end;local ae=X;local function af(...)return{...},y("#",...)end;local function ag()local ah=0;local ai;local aj;local ak;local al;local am;local an;while true do if ah==1 then al={ai,aj,nil,ak}am=X()an={}ah=2 end;if ah==0 then ai={}aj={}ak={}ah=1 end;if ah==3 then for ao=1+0,X()do aj[ao-1]=ag()end;return al end;if ah==2 then for ap=1,am do local aq=R()local ar;if aq==1 then ar=R()~=0 elseif aq==2 then ar=a1()elseif aq==3 then ar=a8()end;an[ap]=ar end;al[3]=R()for as=1,X()do local at=0;local au;while true do if at==0 then au=R()if K(au,1+0,1)==0 then local av=0;local aw;local ax;local ay;while true do if 2==av then if K(ax,1,1)==1 then ay[2]=an[ay[2]]end;if K(ax,2,2)==1 then ay[3]=an[ay[12-9]]end;av=3 end;if 0==av then aw=K(au,2,3)ax=K(au,5-1,1071-(68+997))av=1 end;if av==1 then ay={T(),T(),nil,nil}if aw==0 then ay[3]=T()ay[4]=T()elseif aw==1 then ay[3]=X()elseif aw==2 then ay[3]=X()-2^16 elseif aw==3 then local az=0;while true do if az==0 then ay[3]=X()-2^16;ay[4]=T()break end end end;av=2 end;if av==3 then if K(ax,3,3)==1 then ay[121-(32+85)]=an[ay[4+0]]end;ai[as]=ay;break end end end;break end end end;ah=3 end end end;local function aA(aB,aC,aD)local aE=0;local aF;local aG;local aH;while true do if 0==aE then aF=aB[1]aG=aB[2]aE=1 end;if 1==aE then aH=aB[3]return function(...)local aI=aF;local aJ=aG;local aK=aH;local aL=af;local aM=1;local aN=-1;local aO={}local aP={...}local aQ=y("#",...)-(958-(892+65))local aR={}local aS={}for aT=0,aQ do if aT>=aK then aO[aT-aK]=aP[aT+1]else aS[aT]=aP[aT+1]end end;local aU=aQ-aK+2-1;local aV;local aW;while true do aV=aI[aM]aW=aV[1]if aW<=42 then if aW<=20 then if aW<=9 then if aW<=4 then if aW<=1 then if aW==0 then if aV[2]==aS[aV[4]]then aM=aM+1 else aM=aV[3]end else aS[aV[3-1]]=aS[aV[3]][aV[4]]end elseif aW<=2 then local aX=aV[2]aS[aX]=aS[aX](z(aS,aX+1,aN))elseif aW>3 then aS[aV[2]]=aS[aV[3]][aV[4]]else local aY=aV[2]aS[aY](aS[aY+1])end elseif aW<=6 then if aW==5 then local aZ=0;local a_;local b0;local b1;local b2;while true do if aZ==0 then a_=aV[2]b0,b1=aL(aS[a_](z(aS,a_+1,aV[3])))aZ=1 end;if aZ==1 then aN=b1+a_-1;b2=0;aZ=2 end;if aZ==2 then for b3=a_,aN do local b4=0;while true do if b4==0 then b2=b2+1-0;aS[b3]=b0[b2]break end end end;break end end else local b5=aV[2]local b6,b7=aL(aS[b5](aS[b5+351-(87+263)]))aN=b7+b5-1;local b8=0;for b9=b5,aN do b8=b8+1;aS[b9]=b6[b8]end end elseif aW<=7 then local ba=0;local bb;local bc;local bd;while true do if ba==0 then bb=aV[182-(67+113)]bc=aS[bb+2]ba=1 end;if 1==ba then bd=aS[bb]+bc;aS[bb]=bd;ba=2 end;if ba==2 then if bc>0 then if bd<=aS[bb+1]then local be=0;while true do if be==0 then aM=aV[3]aS[bb+3+0]=bd;break end end end elseif bd>=aS[bb+1]then local bf=0;while true do if bf==0 then aM=aV[3]aS[bb+3]=bd;break end end end;break end end elseif aW>8 then aS[aV[2]]=aS[aV[3]]else aS[aV[2]]=aV[7-4]+aS[aV[4]]end elseif aW<=14 then if aW<=11 then if aW>10 then aS[aV[2]]()else aD[aV[3]]=aS[aV[2]]end elseif aW<=12 then aS[aV[2]]()elseif aW==13 then local bg=aV[2]aS[bg](z(aS,bg+1+0,aN))elseif not aS[aV[2]]then aM=aM+3-2 else aM=aV[3]end elseif aW<=17 then if aW<=15 then aS[aV[2]]=aV[955-(802+150)]elseif aW>16 then local bh=0;local bi;while true do if bh==0 then bi=aV[5-3]aS[bi](aS[bi+1])break end end else local bj=0;local bk;while true do if bj==0 then bk=aV[2]do return aS[bk](z(aS,bk+1,aV[3]))end;break end end end elseif aW<=18 then for bl=aV[2],aV[3]do aS[bl]=nil end elseif aW>19 then local bm=aV[2]do return aS[bm](z(aS,bm+1,aV[3]))end else local bn=aV[2]aS[bn]=aS[bn]()end elseif aW<=31 then if aW<=25 then if aW<=22 then if aW>21 then aS[aV[2]][aV[3]]=aV[4]else aS[aV[2]][aS[aV[3]]]=aS[aV[4]]end elseif aW<=23 then local bo=aV[3-1]do return z(aS,bo,aN)end elseif aW>24 then local bp=0;local bq;local br;while true do if bp==0 then bq=aV[2]br=aS[aV[3]]bp=1 end;if 1==bp then aS[bq+1]=br;aS[bq]=br[aV[4]]break end end else aS[aV[2]]=aS[aV[3]]+aV[4]end elseif aW<=21+7 then if aW<=26 then if aS[aV[2]]==aV[4]then aM=aM+1 else aM=aV[3]end elseif aW>27 then do return end else aS[aV[2]]=#aS[aV[3]]end elseif aW<=1026-(915+82)then aS[aV[2]][aS[aV[3]]]=aV[4]elseif aW>30 then aS[aV[5-3]]=aS[aV[2+1]][aS[aV[4-0]]]else aS[aV[2]]=aS[aV[3]]%aV[1191-(1069+118)]end elseif aW<=36 then if aW<=74-41 then if aW==32 then aM=aV[6-3]else local bs=0;local bt;local bu;while true do if 0==bs then bt=aV[1+1]bu=aS[bt]bs=1 end;if bs==1 then for bv=bt+1,aN do t(bu,aS[bv])end;break end end end elseif aW<=34 then do return aS[aV[2]]()end elseif aW==35 then local bw=0;local bx;local by;local bz;local bA;while true do if 1==bw then aN=bz+bx-1;bA=0;bw=2 end;if bw==2 then for bB=bx,aN do bA=bA+1;aS[bB]=by[bA]end;break end;if bw==0 then bx=aV[2]by,bz=aL(aS[bx](z(aS,bx+1,aV[3])))bw=1 end end else aS[aV[2]]=aS[aV[4-1]]%aV[4+0]end elseif aW<=39 then if aW<=37 then aS[aV[2]]=aC[aV[3]]elseif aW>38 then local bC=aV[2]local bD,bE=aL(aS[bC](z(aS,bC+1,aN)))aN=bE+bC-1;local bF=0;for bG=bC,aN do local bH=0;while true do if bH==0 then bF=bF+1;aS[bG]=bD[bF]break end end end else for bI=aV[2],aV[3]do aS[bI]=nil end end elseif aW<=40 then aS[aV[2]]=#aS[aV[3]]elseif aW>41 then aM=aV[3]else local bJ=0;local bK;local bL;local bM;local bN;while true do if bJ==1 then aN=bM+bK-1;bN=0;bJ=2 end;if 2==bJ then for bO=bK,aN do bN=bN+1;aS[bO]=bL[bN]end;break end;if bJ==0 then bK=aV[2]bL,bM=aL(aS[bK](aS[bK+1]))bJ=1 end end end elseif aW<=63 then if aW<=52 then if aW<=47 then if aW<=44 then if aW>43 then local bP=aV[2]do return z(aS,bP,aN)end else local bQ=aV[793-(368+423)]aS[bQ]=aS[bQ]()end elseif aW<=45 then local bR=0;local bS;while true do if bR==0 then bS=aV[2]aS[bS]=aS[bS](z(aS,bS+1,aV[3]))break end end elseif aW>46 then do return aS[aV[2]]()end else aS[aV[2]][aS[aV[3]]]=aS[aV[4]]end elseif aW<=49 then if aW>48 then aS[aV[2]]=aD[aV[3]]else local bT=0;local bU;while true do if 0==bT then bU=aV[2]aS[bU](z(aS,bU+1,aV[3]))break end end end elseif aW<=50 then local bV=aV[2]aS[bV](z(aS,bV+1,aN))elseif aW==51 then local bW=aV[2]local bX=aS[bW+2]local bY=aS[bW]+bX;aS[bW]=bY;if bX>0 then if bY<=aS[bW+3-2]then local bZ=0;while true do if bZ==0 then aM=aV[3]aS[bW+21-(10+8)]=bY;break end end end elseif bY>=aS[bW+1]then aM=aV[3]aS[bW+3]=bY end else aS[aV[2]]=aS[aV[3]][aS[aV[4]]]end elseif aW<=57 then if aW<=54 then if aW>53 then if not aS[aV[2]]then aM=aM+3-2 else aM=aV[3]end else local b_=0;local c0;local c1;local c2;local c3;while true do if 0==b_ then c0=aV[2]c1,c2=aL(aS[c0](z(aS,c0+1,aN)))b_=1 end;if 2==b_ then for c4=c0,aN do c3=c3+1;aS[c4]=c1[c3]end;break end;if b_==1 then aN=c2+c0-1;c3=0;b_=2 end end end elseif aW<=497-(416+26)then local c5=0;local c6;local c7;local c8;while true do if c5==1 then c8={}c7=w({},{[h("\17\139\95\85\42\177\78","\59\78\212\54")]=function(c9,ca)local cb=0;local cc;while true do if cb==0 then cc=c8[ca]return cc[1][cc[6-4]]end end end,[h("\47\105\141\142\145\39\163\244\21\78","\144\112\54\227\235\230\78\205")]=function(cd,ce,cf)local cg=0;local ch;while true do if cg==0 then ch=c8[ce]ch[1][ch[2]]=cf;break end end end})c5=2 end;if c5==2 then for ci=1,aV[4]do aM=aM+1;local cj=aI[aM]if cj[1+0]==61 then c8[ci-1]={aS,cj[3]}else c8[ci-1]={aC,cj[3]}end;aR[#aR+1]=c8 end;aS[aV[440-(145+293)]]=aA(c6,c7,aD)break end;if c5==0 then c6=aJ[aV[3]]c7=nil;c5=1 end end elseif aW==56 then if aS[aV[2]]==aV[4]then aM=aM+431-(44+386)else aM=aV[3]end else aS[aV[2]]=aV[3]end elseif aW<=60 then if aW<=1544-(998+488)then aS[aV[2]]=aC[aV[3]]elseif aW==59 then aS[aV[2]][aV[3]]=aV[4]else aS[aV[1+1]][aV[3]]=aS[aV[4]]end elseif aW<=50+11 then aS[aV[2]]=aS[aV[3]]elseif aW>62 then if aS[aV[2]]then aM=aM+1 else aM=aV[3]end else aS[aV[774-(201+571)]]=aS[aV[3]]+aV[4]end elseif aW<=74 then if aW<=68 then if aW<=1203-(116+1022)then if aW>64 then local ck=aV[2]local cl=aS[ck]for cm=ck+1,aN do t(cl,aS[cm])end else local cn=0;local co;local cp;local cq;while true do if cn==1 then cq={}cp=w({},{[h("\140\23\6\242\212\94\171","\59\211\72\111\156\176")]=function(cr,cs)local ct=0;local cu;while true do if ct==0 then cu=cq[cs]return cu[1][cu[2]]end end end,[h("\113\184\237\40\89\142\237\41\75\159","\77\46\231\131")]=function(cv,cw,cx)local cy=cq[cw]cy[1][cy[2]]=cx end})cn=2 end;if cn==0 then co=aJ[aV[3]]cp=nil;cn=1 end;if cn==2 then for cz=1,aV[4]do local cA=0;local cB;while true do if cA==1 then if cB[1]==61 then cq[cz-1]={aS,cB[3]}else cq[cz-1]={aC,cB[2+1]}end;aR[#aR+1]=cq;break end;if cA==0 then aM=aM+1;cB=aI[aM]cA=1 end end end;aS[aV[7-5]]=aA(co,cp,aD)break end end end elseif aW<=66 then do return end elseif aW>67 then aS[aV[2]]=aA(aJ[aV[3]],nil,aD)else local cC=aV[2]aS[cC]=aS[cC](z(aS,cC+1,aN))end elseif aW<=71 then if aW<=69 then aS[aV[2]]=aS[aV[10-7]]%aS[aV[4]]elseif aW>70 then local cD=aV[2]aS[cD](z(aS,cD+1,aV[3]))else aS[aV[2]][aS[aV[862-(814+45)]]]=aV[4]end elseif aW<=177-105 then aS[aV[2]]=aD[aV[3]]elseif aW==73 then aS[aV[1+1]]=aA(aJ[aV[3]],nil,aD)else local cE=aV[2]local cF=aS[cE]local cG=aS[cE+2]if cG>0 then if cF>aS[cE+1]then aM=aV[2+1]else aS[cE+3]=cF end elseif cF<aS[cE+1]then aM=aV[3]else aS[cE+3]=cF end end elseif aW<=79 then if aW<=76 then if aW==75 then aS[aV[2]]=aV[3]+aS[aV[4]]else aS[aV[2]]={}end elseif aW<=962-(261+624)then aS[aV[2]]={}elseif aW>78 then if aS[aV[2]]then aM=aM+1 else aM=aV[3]end else local cH=aV[2]local cI=aS[aV[3]]aS[cH+1]=cI;aS[cH]=cI[aV[4]]end elseif aW<=82 then if aW<=80 then aD[aV[3]]=aS[aV[2]]elseif aW>81 then aS[aV[2]][aV[3]]=aS[aV[4]]else aS[aV[2]]=aS[aV[3]]%aS[aV[4]]end elseif aW<=83 then if aV[2]==aS[aV[4]]then aM=aM+1 else aM=aV[3]end elseif aW==84 then local cJ=aV[2]aS[cJ]=aS[cJ](z(aS,cJ+1,aV[3]))else local cK=0;local cL;local cM;local cN;while true do if cK==0 then cL=aV[3-1]cM=aS[cL]cK=1 end;if cK==1 then cN=aS[cL+2]if cN>1080-(1020+60)then if cM>aS[cL+1424-(630+793)]then aM=aV[3]else aS[cL+3]=cM end elseif cM<aS[cL+1]then aM=aV[3]else aS[cL+3]=cM end;break end end end;aM=aM+1 end end end end end;return aA(ag(),{},D)(...)endv(),...)
